<html><head>
	<meta http-equiv="Content-type" content="text/html; charset=utf-8">
	<title>ESP module</title>
	<link rel="stylesheet" href="style.css">
</head>
<body>
<h3 class="top">Главная</h3>
<div class="menu">
	<a href='index.htm'>Техническое обслуживание</a>
	<a href='log.txt'>Лог устройства</a>
	<a href='edit'>Загрузка файлов</a>
	<a href='restart?device=ok'>Перезагрузка</a>

<table class="details">
<caption>Техническое обслуживание</caption>
    <tr>
        <td>
            <h3>Перепрошивка модуля:</h3>
            <form method='POST' action='/update' enctype='multipart/form-data'><input type='file' name='update'><input type='submit' value='Update'></form>
            <p>&nbsp;</p>
        </td>
    </tr>
    <tr>
        <td>
            <h3>Подключение к WiFi роутеру</h3>
            <input id="ssid" value="" class="form-control" pattern="[0-9a-zA-Z.]{1,15}" placeholder="Имя WiFi сети">
            <input id="password" value="" pattern=".{8,15}" onfocus="this.type='text'" type="password" class="form-control" placeholder="Пароль">
            <input class="btn btn-block btn-success" value="Сохранить" onclick="set_ssid(this);" type="submit">
        </td>
    </tr>
    
    <tr>
        <td>
            <h3>MQTT сервер</h3>
            <input id="mqtt" value="" class="form-control" pattern="[0-9.]{1,15}" placeholder="адрес MQTT-сервера">
            <input class="btn btn-block btn-success" value="Сохранить" onclick="set_mqtt(this);" type="submit">
        </td>
    </tr>
</table>
</div>

<script type="text/javascript" src="/function.js"></script>
<script type="text/javascript">
   var set_real_time;
   function handleServerResponse(){
    clearTimeout(set_real_time);
    var res = jsonResponse.time.split(":");
    real_time(hours=res[0],min=res[1],sec=res[2]);
    document.body.style.backgroundColor="rgb("+jsonResponse.rgb+")";
   }
   function real_time(hours,min,sec) {
   sec=Number(sec)+1;
    if (sec>=60){min=Number(min)+1;sec=0;}
    if (min>=60){hours=Number(hours)+1;min=0;}
    if (hours>=24){hours=0};
    document.getElementById("time").innerHTML = hours+":"+min+":"+sec;
    set_real_time = setTimeout("real_time("+hours+","+min+","+sec+");", 1000);
   }
   function load_time(submit){
    server = "/Time";
    send_request(submit,server);
    load();
   }
   function time_zone(submit){
    server = "/TimeZone?timezone="+val('timezone');
    send_request(submit,server);
   }
   function set_time_zone(submit){
    var set_date = new Date();
    var gmtHours = -set_date.getTimezoneOffset()/60;
    document.getElementById('timezone').value = gmtHours;
    server = "/TimeZone?timezone="+gmtHours;
    send_request(submit,server);
   }
   function set_ssid(submit){
    server = "/ssid?ssid="+val('ssid')+"&password="+encodeURIComponent(val('password'));
    send_request(submit,server);
    alert("Измененя вступят в силу после перезагрузки. Пожалуйта перезагрузите устройство.");
   }
   function set_ssid_ap(submit){
    server = "/ssidap?ssidAP="+val('ssidap')+"&passwordAP="+encodeURIComponent(val('passwordAp'));
    send_request(submit,server);
    alert("Измененя вступят в силу после перезагрузки. Пожалуйта перезагрузите устройство.");
   }
   function set_mqtt(submit){
    server = "/mqtt?addr="+val('mqtt');
    send_request(submit,server);
    alert("Измененя вступят в силу после перезагрузки. Пожалуйта перезагрузите устройство.");
   }
   function set_ssdp(submit){
    server = "/ssdp?ssdp="+val('ssdp');
    send_request(submit,server);
    document.getElementById('ssdp_t').innerHTML = val('ssdp');
   }
   function restart(submit,texts){
    if (confirm(texts)) {
	 server = "/restart?device=ok";
     send_request(submit,server);
     return true;
    } else {
     return false;
    }
   }
  </script>

</body></html>